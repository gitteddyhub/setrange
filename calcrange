## 자릿수 구하기
## 흔히 첫번째 자리(1~9), 두번째 자리(10~99) 로 세는 것은 자연수의 자릿수를 세는 것으로 아래 식으로 구하면 됨. (자연수의 경우 str 로 바꿔서 갯수(len)를 셀 수도 있음)
## 아래 식으로 세면 소수 첫번째자리는 0 이 되므로, (우리가 일반적으로 세는 자릿수는 0의 자리가 없음 (첫번째, 두번째, 소수 첫번째, 소수 두번째 이런식으로 세므로 계산식에 IF 문을 써서 1보다 작을 경우 -1 을 해줘야함.)
## def jari(x):
##     x = 1 + int(log10(abs(x)))
##     return x

## 그러므로 자릿수를 구할 경우, 10 의 지수로 생각해야함. 첫번째 자리는 10의 0승이므로 0, 두번째 자리는 10의 1승이므로 1, 소수점 첫번째 자리는 10의 -1 승이므로 -1 이렇게 원하는 자리수를 생각해야함.
## 엑셀이나 파이썬의 round(값, 자리수)에서 자리수가 10의 -(지수)를 기입하게 되어있음.
def jari(x):
    x = int(log10(abs(x)))
    return x

## 위에서 말한대로, 반올림, 올림, 내림에서 사용하는 함수의 자리수는 음수 형태임. -1 이 1의 자리수에서 반올림하여 10자리수로 출력됨. (반올림이 될 자리수와 반올림이 된후의 자리수 혼동 주의. 그리고 양의 자리수가 음수임을 주의할 것)
## 반올림은 자리수를 지정할 수 있지만, 올림/내림은 자리수를 지정할 수 없으므로 10**-(자리수) 를 곱하여 올림/내림 후 10**-(자리수) 로 나눠준다. (엑셀은 모두 자리수 지정 가능)
## 버림은 trunc() 로 int() 와 같은 결과값임

## 반올림(오사오입)
## 오사오입 :  앞자리수가 짝수이면 버리고, 홀수이면 올린다. 결과값을 짝수로 만듬 - 공학이나 자연과학에서는 오사오입이 오차가 가장 적어서 사용한다고 한다. (오차가 걱정되면 반올림을 하지마 ㅇㅅㅇ;;)
# round(값, -(자릿수))

## 올림
# ceil(값*10**-(자릿수))/10**-(자릿수)

## 내림
# floor(값*10**-(자릿수))/10**-(자릿수)

## 유효숫자
# round(값, -(1+int(log10(abs(x))) - sigfig)

## 반올림/올림/내림을 10단위가 아닌 5단위 혹은 2단위 등으로 할 경우 (원하는 숫자의 배수로 반올림/올림/내림을 할 경우)
# round(값*10**(-자리수)/배수), (-자리수)*5
*10**(자리수)
# ceil(값*(10**(-자리수))/배수)/(10**(-자리수))*배수
# floor(값*(10**(-자리수))/배수)/(10**(-자리수))*배수



def up2(a):
    jarisu = int(floor(log10(abs(a))))
    print("자리수", jarisu)
    j = d - 1
    x = ceil(a * (10 ** (-(jarisu-j))) / c) / (10 ** (-(jarisu-j))) * c
    print("이거", ceil(a * (10 ** (-(jarisu-j))) / c), "저거", (10 ** (-(jarisu-j))), "흐미", c )
    print(x)
    return x

x = ceil(a * ((10 ** (-(jarisu-sig+1))) / c)) / ((10 ** (-(jarisu-sig+1))) / c)

